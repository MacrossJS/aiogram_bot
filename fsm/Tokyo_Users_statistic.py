import json
import os
# from sea_battle_Tokyo import *


def get_logs_list():
    """–ü–æ–ª—É—á–∏–º —Å–ø–∏—Å–æ–∫ –ª–æ–≥-—Ñ–∞–π–ª–æ–≤"""
    log_list = os.listdir(f'logs\\')
    return log_list


def load_last_file(file_last):
    """–ó–∞–≥—Ä—É–∑–∏–º –∏–Ω—Ñ–æ –æ –ø—Ä–æ—Ñ–∏–ª—è—Ö –∏–∑ json –≤ —Å–ª–æ–≤–∞—Ä—å"""
    with open(f"logs/{file_last}", 'r', encoding='utf-8') as last_file:
        users_last = json.load(last_file)
    return users_last


def load_penult_file(file_penult):
    """–ó–∞–≥—Ä—É–∑–∏–º –∏–Ω—Ñ–æ –æ –ø—Ä–æ—Ñ–∏–ª—è—Ö –∏–∑ json –≤ —Å–ª–æ–≤–∞—Ä—å"""
    with open(f"logs/{file_penult}", 'r', encoding='utf-8') as penult_file:
        users_penult = json.load(penult_file)
    return users_penult


team = [250, 352, 301, 225, 351, 247, 268, 283, 288, 269, 363, 371, 447, 387, 388, 222]


def create_top_users(top=1):
    """–û—Ç—Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Ñ–∏–ª–∏ –ø–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—é –æ–ø—ã—Ç–∞"""
    print(f"–í—Å–µ–≥–æ –∏–≥—Ä–æ–∫–æ–≤: {len(users)}\n")
    for key, value in sorted(users.items(), key=lambda x: -x[1]['exp']):
        icon = 'üîù' if int(key) in team else ''
        print(f"{top}. [{key}]: {icon}{value['name']}[{value['level']}] ‚û°Ô∏è {value['wins']}‚öî, {value['exp']}‚≠ê")
        top += 1
        if value['level'] < 3:
            break


def create_progress():
    """–î–æ–±–∞–≤–∏–º –≤ users –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—Ä–∏—Ä–æ—Å—Ç–∞ –æ–ø—ã—Ç–∞ –∏ –ø–æ–±–µ–¥ –∑–∞ —Å—É—Ç–∫–∏"""
    for key in users:
        if key in users_old:
            users[key]['rise'] = users[key]['exp'] - users_old[key]['exp']
            users[key]['kills'] = users[key]['wins'] - users_old[key]['wins']
        else:
            users[key]['rise'] = users[key]['exp']
            users[key]['kills'] = users[key]['wins']


def create_progress_users(top=1):
    """–û—Ç—Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Ñ–∏–ª–∏ –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—É —Ä–æ—Å—Ç–∞ –æ–ø—ã—Ç–∞"""
    for key, value in sorted(users.items(), key=lambda x: -x[1]['rise']):
        icon = 'üîù' if int(key) in team else ''
        print(f"{top}. {icon}{value['name']}[{value['level']}] ‚û°  +{value['rise']}‚≠ê +{value['kills']}‚öîÔ∏è")
        top += 1
        if value['rise'] < 100:
            break


logs_list = get_logs_list()

users = load_last_file(logs_list[-1])
users_old = load_penult_file(logs_list[-2])
print(f"–î–∞–Ω–Ω—ã–µ –∑–∞ {logs_list[-1].replace('.json', '').split('_')[-1]}")
create_progress()
create_top_users(top=1)
create_progress_users(top=1)
